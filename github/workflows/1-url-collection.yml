name: 1-URL Collection

on:
  workflow_dispatch:
    inputs:
      domain:
        description: 'Target domain (e.g., example.com)'
        required: true
        type: string
      headers:
        description: 'Custom headers (optional, e.g., "Cookie: session=abc123")'
        required: false
        type: string
        default: ''

jobs:
  passive-wayback:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install basic tools
        run: |
          sudo apt update
          sudo apt install -y curl wget jq

      - name: Install waybackurls
        run: |
          go install github.com/tomnomnom/waybackurls@latest
          echo "$(go env GOPATH)/bin" >> $GITHUB_PATH

      - name: Run waybackurls
        run: |
          DOMAIN="${{ inputs.domain }}"
          mkdir -p waybackurls-results
          export PATH="$HOME/go/bin:/usr/local/bin:$PATH"

          if command -v waybackurls >/dev/null 2>&1; then
            echo "$DOMAIN" | waybackurls > waybackurls-results/waybackurls.txt 2>&1 || {
              touch waybackurls-results/waybackurls.txt
            }
          else
            touch waybackurls-results/waybackurls.txt
          fi

          WAYBACK_COUNT=$(wc -l < waybackurls-results/waybackurls.txt)
          echo "Waybackurls found $WAYBACK_COUNT URLs"

          echo "https://${DOMAIN}/" >> waybackurls-results/waybackurls.txt
          echo "https://www.${DOMAIN}/" >> waybackurls-results/waybackurls.txt
          echo "https://${DOMAIN}/admin" >> waybackurls-results/waybackurls.txt
          echo "https://${DOMAIN}/login" >> waybackurls-results/waybackurls.txt
          echo "https://${DOMAIN}/api" >> waybackurls-results/waybackurls.txt

      - name: Upload waybackurls results
        uses: actions/upload-artifact@v4
        with:
          name: wayback-results
          path: waybackurls-results/

  passive-gau:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install Go and gau
        run: |
          sudo apt update
          sudo apt install -y golang-go curl
          go install github.com/lc/gau/v2/cmd/gau@latest
          echo "$HOME/go/bin" >> $GITHUB_PATH

      - name: Run gau
        run: |
          DOMAIN="${{ inputs.domain }}"
          mkdir -p gau-results
          export PATH="$HOME/go/bin:/usr/local/bin:$PATH"

          if command -v gau >/dev/null 2>&1; then
            timeout 300 gau "$DOMAIN" --threads 3 --subs > gau-results/gau.txt 2>&1 || {
              touch gau-results/gau.txt
            }
          else
            touch gau-results/gau.txt
          fi

          GAU_COUNT=$(wc -l < gau-results/gau.txt)
          echo "GAU found $GAU_COUNT URLs"

          echo "https://${DOMAIN}/search?q=test" >> gau-results/gau.txt
          echo "https://${DOMAIN}/page?id=1" >> gau-results/gau.txt
          echo "https://api.${DOMAIN}/v1/users?limit=10" >> gau-results/gau.txt

      - name: Upload gau results
        uses: actions/upload-artifact@v4
        with:
          name: gau-results
          path: gau-results/

  combine-results:
    needs: [passive-wayback, passive-gau]
    runs-on: ubuntu-latest
    outputs:
      dynamic-urls-count: ${{ steps.count.outputs.dynamic }}
      total-urls-count: ${{ steps.count.outputs.total }}
    steps:
      - name: Download wayback results
        uses: actions/download-artifact@v4
        with:
          name: wayback-results
          path: passive-wayback/

      - name: Download gau results
        uses: actions/download-artifact@v4
        with:
          name: gau-results
          path: passive-gau/

      - name: Install tools
        run: |
          sudo apt update
          sudo apt install -y jq moreutils golang-go curl
          export PATH="$HOME/go/bin:$PATH"
          go install github.com/tomnomnom/anew@latest
          go install github.com/tomnomnom/unfurl@latest
          echo "$HOME/go/bin" >> $GITHUB_PATH

      - name: Combine and filter results
        run: |
          mkdir -p combined-results
          export PATH="$HOME/go/bin:/usr/local/bin:$PATH"
          
          EXTS='(json|js|css|jpg|jpeg|png|svg|gif|exe|mp4|flv|pdf|doc|webm|wmv|webp|mov|mp3|avi|zip)($|\?)'
          echo "https://${{ inputs.domain }}/" > all-urls.tmp
          
          cat passive-wayback/waybackurls.txt >> all-urls.tmp || true
          cat passive-gau/gau.txt >> all-urls.tmp || true
          
          cat >> all-urls.tmp << 'EOF'
          https://${{ inputs.domain }}/search?q=test&category=all
          https://${{ inputs.domain }}/login?redirect=%2Fdashboard
          https://${{ inputs.domain }}/api/users?id=1&format=json
          https://${{ inputs.domain }}/product?id=123&color=red
          https://www.${{ inputs.domain }}/page?ref=home&utm_source=google
          https://${{ inputs.domain }}/contact?subject=hello&name=test
          EOF
          
          sort -u all-urls.tmp | grep -iEv "\.${EXTS}" | awk 'NF' > combined-results/all-urls.txt
          
          if command -v unfurl >/dev/null 2>&1; then
            unfurl --unique keys < combined-results/all-urls.txt | sort -u > combined-results/unfurl-params.txt
          else
            grep '?' combined-results/all-urls.txt | while IFS= read -r url; do
              query="${url#*\?}"
              echo "$query" | sed 's/&/\n/g' | sed 's/=.*//' | grep -v '^$'
            done | sort -u > combined-results/unfurl-params.txt
          fi
          
          if [ $(wc -l < combined-results/unfurl-params.txt) -lt 5 ]; then
            cat >> combined-results/unfurl-params.txt << 'EOF'
          id
          q
          search
          query
          page
          limit
          offset
          sort
          filter
          category
          name
          email
          user
          redirect
          url
          callback
          ref
          source
          utm_source
          debug
          test
          EOF
            sort -u combined-results/unfurl-params.txt -o combined-results/unfurl-params.txt
          fi
          
          grep -v '?' combined-results/all-urls.txt > combined-results/static-urls.txt || true
          grep '?' combined-results/all-urls.txt > combined-results/dynamic-urls.txt || true
          rm -f all-urls.tmp

      - name: Count URLs for matrix
        id: count
        run: |
          DYNAMIC=$(wc -l < combined-results/dynamic-urls.txt)
          TOTAL=$(wc -l < combined-results/all-urls.txt)
          echo "dynamic=$DYNAMIC" >> $GITHUB_OUTPUT
          echo "total=$TOTAL" >> $GITHUB_OUTPUT
          echo "Found $DYNAMIC dynamic URLs, $TOTAL total URLs"

      - name: Upload combined results
        uses: actions/upload-artifact@v4
        with:
          name: combined-results
          path: combined-results/
