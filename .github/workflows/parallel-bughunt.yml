name: Parallel BugHunt

on:
  workflow_dispatch:
    inputs:
      domain:
        description: 'Target domain (for example: example.com)'
        required: true

jobs:
  run-once:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set script permissions
        run: chmod +x main.sh

      - name: Install all bugbounty tools
        run: |
          set -e

          # waybackurls (tomnomnom)
          curl -s https://api.github.com/repos/tomnomnom/waybackurls/releases/latest \
            | grep "browser_download_url.*linux-amd64" \
            | grep -o 'https://[^"]*' \
            | head -n1 \
            | xargs -I{} wget -O waybackurls.tgz {}
          tar -xzf waybackurls.tgz
          mv waybackurls /usr/local/bin/
          chmod +x /usr/local/bin/waybackurls

          # anew
          curl -s https://api.github.com/repos/tomnomnom/anew/releases/latest \
            | grep "browser_download_url.*linux-amd64" \
            | grep -o 'https://[^"]*' \
            | head -n1 \
            | xargs -I{} wget -O anew.tgz {}
          tar -xzf anew.tgz
          mv anew /usr/local/bin/
          chmod +x /usr/local/bin/anew

          # unfurl
          curl -s https://api.github.com/repos/tomnomnom/unfurl/releases/latest \
            | grep "browser_download_url.*linux-amd64" \
            | grep -o 'https://[^"]*' \
            | head -n1 \
            | xargs -I{} wget -O unfurl.tgz {}
          tar -xzf unfurl.tgz
          mv unfurl /usr/local/bin/
          chmod +x /usr/local/bin/unfurl

          # gau
          curl -s https://api.github.com/repos/lc/gau/releases/latest \
            | grep "browser_download_url.*gau-linux-amd64" \
            | grep -o 'https://[^"]*' \
            | head -n1 \
            | xargs -I{} wget -O /usr/local/bin/gau {}
          chmod +x /usr/local/bin/gau

          # httpx
          curl -s https://api.github.com/repos/projectdiscovery/httpx/releases/latest \
            | grep "browser_download_url.*linux_amd64" \
            | grep -o 'https://[^"]*' \
            | head -n1 \
            | xargs -I{} wget -O /usr/local/bin/httpx {}
          chmod +x /usr/local/bin/httpx

          # kxss
          curl -s https://api.github.com/repos/Emoe/kxss/releases/latest \
            | grep "browser_download_url.*linux-amd64" \
            | grep -o 'https://[^"]*' \
            | head -n1 \
            | xargs -I{} wget -O /usr/local/bin/kxss {}
          chmod +x /usr/local/bin/kxss

          # x8
          curl -s https://api.github.com/repos/Sh1Yo/x8/releases/latest \
            | grep "browser_download_url.*x86_64-linux-x8" \
            | grep -o 'https://[^"]*' \
            | head -n1 \
            | xargs -I{} wget -O x8.tar.gz {}
          tar -xzf x8.tar.gz
          mv x8 /usr/local/bin/
          chmod +x /usr/local/bin/x8

          # jq, moreutils for helpers
          sudo apt update && sudo apt install -y jq moreutils

          # check versions
          for tool in waybackurls anew unfurl gau httpx kxss x8 jq; do
            echo "Checking $tool version:"
            $tool --help | head -n 2
          done

      - name: Check installed tools (diagnose)
        run: |
          for tool in waybackurls gau httpx x8 kxss unfurl anew jq; do
            which $tool || (echo "$tool NOT FOUND!" && exit 1)
          done
          echo "All tools installed."

      - name: Run bug bounty main.sh
        run: ./main.sh "${{ github.event.inputs.domain }}"

      - name: Upload result (Recon Output)
        uses: actions/upload-artifact@v4
        with:
          name: recon-output
          path: ${{ github.event.inputs.domain }}_recon/
