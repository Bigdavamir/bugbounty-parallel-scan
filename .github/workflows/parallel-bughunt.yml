name: Parallel BugHunt

on:
  workflow_dispatch:
    inputs:
      domain:
        description: "Target domain (e.g., example.com)"
        required: true

jobs:
  bughunt:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install dependencies (jq, moreutils, gzip, tar, unzip)
        run: |
          sudo apt update
          sudo apt install -y jq moreutils gzip tar unzip curl wget

      - name: Install Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.21'

      - name: Install bugbounty tools (all from release)
        run: |
          set -e
          
          BIN_DIR="/usr/local/bin"
          
          echo "Installing waybackurls..."
          go install github.com/tomnomnom/waybackurls@latest
          sudo cp ~/go/bin/waybackurls $BIN_DIR/

          echo "Installing anew..."
          go install github.com/tomnomnom/anew@latest
          sudo cp ~/go/bin/anew $BIN_DIR/

          echo "Installing unfurl..."
          go install github.com/tomnomnom/unfurl@latest
          sudo cp ~/go/bin/unfurl $BIN_DIR/

          echo "Installing kxss..."
          go install github.com/tomnomnom/kxss@latest
          sudo cp ~/go/bin/kxss $BIN_DIR/

          echo "Installing gau..."
          go install github.com/lc/gau/v2/cmd/gau@latest
          sudo cp ~/go/bin/gau $BIN_DIR/

          echo "Installing httpx..."
          go install github.com/projectdiscovery/httpx/cmd/httpx@latest
          sudo cp ~/go/bin/httpx $BIN_DIR/

          echo "Installing x8..."
          X8_VER=$(curl -s https://api.github.com/repos/Sh1Yo/x8/releases/latest | jq -r '.tag_name')
          curl -sL "https://github.com/Sh1Yo/x8/releases/download/${X8_VER}/x8_linux_amd64" -o /tmp/x8
          chmod +x /tmp/x8 && sudo mv /tmp/x8 $BIN_DIR/

          # Verify installations
          echo "Verifying installations..."
          waybackurls --help >/dev/null && echo "✓ waybackurls installed" || echo "✗ waybackurls failed"
          anew --help >/dev/null && echo "✓ anew installed" || echo "✗ anew failed"
          unfurl --help >/dev/null && echo "✓ unfurl installed" || echo "✗ unfurl failed"
          kxss --help >/dev/null && echo "✓ kxss installed" || echo "✗ kxss failed"
          gau --help >/dev/null && echo "✓ gau installed" || echo "✗ gau failed"
          httpx --help >/dev/null && echo "✓ httpx installed" || echo "✗ httpx failed"
          x8 --help >/dev/null && echo "✓ x8 installed" || echo "✗ x8 failed"

      - name: Make main.sh executable
        run: chmod +x main.sh

      - name: Run main.sh
        run: ./main.sh ${{ github.event.inputs.domain }}

      - name: Archive recon results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: recon-results
          path: ./*_recon/
