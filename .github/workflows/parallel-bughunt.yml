name: Parallel BugHunt

on:
  workflow_dispatch:
    inputs:
      domain:
        description: "Target domain (e.g., example.com)"
        required: true

jobs:
  bughunt:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install dependencies (jq, moreutils)
        run: |
          sudo apt update
          sudo apt install -y jq moreutils

      - name: Install bugbounty tools (all from release)
        run: |
          set -e

          BIN_DIR="/usr/local/bin"

          # waybackurls
          WAYBACK_VER=$(curl -s https://api.github.com/repos/tomnomnom/waybackurls/releases/latest | grep tag_name | cut -d '"' -f4)
          curl -L "https://github.com/tomnomnom/waybackurls/releases/download/${WAYBACK_VER}/waybackurls_linux_amd64" -o waybackurls
          chmod +x waybackurls && sudo mv waybackurls $BIN_DIR/

          # anew
          ANEW_VER=$(curl -s https://api.github.com/repos/tomnomnom/anew/releases/latest | grep tag_name | cut -d '"' -f4)
          curl -L "https://github.com/tomnomnom/anew/releases/download/${ANEW_VER}/anew_linux_amd64" -o anew
          chmod +x anew && sudo mv anew $BIN_DIR/

          # unfurl
          UNFURL_VER=$(curl -s https://api.github.com/repos/tomnomnom/unfurl/releases/latest | grep tag_name | cut -d '"' -f4)
          curl -L "https://github.com/tomnomnom/unfurl/releases/download/${UNFURL_VER}/unfurl_linux_amd64" -o unfurl
          chmod +x unfurl && sudo mv unfurl $BIN_DIR/

          # kxss
          KXSS_VER=$(curl -s https://api.github.com/repos/tomnomnom/kxss/releases/latest | grep tag_name | cut -d '"' -f4)
          curl -L "https://github.com/tomnomnom/kxss/releases/download/${KXSS_VER}/kxss_linux_amd64" -o kxss
          chmod +x kxss && sudo mv kxss $BIN_DIR/

          # gau
          GAU_URL=$(curl -s https://api.github.com/repos/lc/gau/releases/latest | grep "browser_download_url.*linux_amd64" | grep -o 'https://[^"]*' | head -n1)
          wget -q -O gau "$GAU_URL"
          chmod +x gau && sudo mv gau $BIN_DIR/

          # httpx (fixed block, use .tar.gz)
          HTTPX_VER=$(curl -s https://api.github.com/repos/projectdiscovery/httpx/releases/latest | grep tag_name | cut -d '"' -f4)
          curl -L "https://github.com/projectdiscovery/httpx/releases/download/${HTTPX_VER}/httpx_${HTTPX_VER}_linux_amd64.tar.gz" -o httpx.tar.gz
          tar -xzf httpx.tar.gz httpx
          sudo mv httpx $BIN_DIR/
          rm -f httpx.tar.gz

          # x8
          X8_VER=$(curl -s https://api.github.com/repos/Sh1Yo/x8/releases/latest | grep tag_name | cut -d '"' -f4)
          curl -L "https://github.com/Sh1Yo/x8/releases/download/${X8_VER}/x8_linux_amd64" -o x8
          chmod +x x8 && sudo mv x8 $BIN_DIR/

          sudo chmod -R +x $BIN_DIR/*

      - name: Make main.sh executable
        run: chmod +x main.sh

      - name: Run main.sh
        run: ./main.sh ${{ github.event.inputs.domain }}

      - name: Archive recon results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: recon-results
          path: ./*_recon/
