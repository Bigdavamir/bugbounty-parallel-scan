name: URL Gathering

on:
  workflow_call:
    inputs:
      domain:
        required: true
        type: string
      headers:
        required: false
        type: string
      run_id:
        required: true
        type: string

jobs:
  passive-wayback:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install basic tools
        run: |
          sudo apt update
          sudo apt install -y curl wget jq

      - name: Install waybackurls
        run: |
          sudo apt install -y golang-go
          export PATH=$PATH:/usr/local/go/bin:~/go/bin
          go install github.com/tomnomnom/waybackurls@latest
          sudo cp ~/go/bin/waybackurls /usr/local/bin/ 2>/dev/null || echo "waybackurls available in ~/go/bin/"
          export PATH="$HOME/go/bin:$PATH"

      - name: Run waybackurls
        run: |
          DOMAIN="${{ inputs.domain }}"
          mkdir -p passive-wayback
          export PATH="$HOME/go/bin:/usr/local/bin:$PATH"
          echo "$DOMAIN" | waybackurls > passive-wayback/waybackurls.txt 2>&1 || { touch passive-wayback/waybackurls.txt; }
          echo "https://${DOMAIN}/" >> passive-wayback/waybackurls.txt
          echo "https://www.${DOMAIN}/" >> passive-wayback/waybackurls.txt
          echo "https://${DOMAIN}/admin" >> passive-wayback/waybackurls.txt
          echo "https://${DOMAIN}/login" >> passive-wayback/waybackurls.txt
          echo "https://${DOMAIN}/api" >> passive-wayback/waybackurls.txt

      - name: Cache waybackurls results
        uses: actions/cache@v3
        with:
          path: passive-wayback/
          key: wayback-results-${{ inputs.run_id }}

  passive-gau:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install Go and gau
        run: |
          sudo apt install -y golang-go curl
          export GOPATH=$HOME/go
          export PATH=$PATH:/usr/local/go/bin:$GOPATH/bin
          go install github.com/lc/gau/v2/cmd/gau@latest
          sudo cp $HOME/go/bin/gau /usr/local/bin/ 2>/dev/null || echo "gau available in ~/go/bin/"
          echo "$HOME/go/bin" >> $GITHUB_PATH

      - name: Run gau
        run: |
          DOMAIN="${{ inputs.domain }}"
          mkdir -p passive-gau
          export PATH="$HOME/go/bin:/usr/local/bin:$PATH"
          timeout 300 gau "$DOMAIN" --threads 3 --subs > passive-gau/gau.txt 2>&1 || { touch passive-gau/gau.txt; }
          echo "https://${DOMAIN}/search?q=test" >> passive-gau/gau.txt
          echo "https://${DOMAIN}/page?id=1" >> passive-gau/gau.txt
          echo "https://api.${DOMAIN}/v1/users?limit=10" >> passive-gau/gau.txt

      - name: Cache gau results
        uses: actions/cache@v3
        with:
          path: passive-gau/
          key: gau-results-${{ inputs.run_id }}

  combine-results:
    needs: [passive-wayback, passive-gau]
    runs-on: ubuntu-latest
    steps:
      - name: Restore wayback results
        uses: actions/cache@v3
        with:
          path: passive-wayback/
          key: wayback-results-${{ inputs.run_id }}
          restore-keys: wayback-results-

      - name: Restore gau results
        uses: actions/cache@v3
        with:
          path: passive-gau/
          key: gau-results-${{ inputs.run_id }}
          restore-keys: gau-results-

      - name: Install tools
        run: |
          sudo apt update
          sudo apt install -y jq moreutils golang-go curl
          export PATH="$HOME/go/bin:$PATH"
          go install github.com/tomnomnom/anew@latest
          go install github.com/tomnomnom/unfurl@latest
          sudo cp $HOME/go/bin/* /usr/local/bin/ 2>/dev/null || echo "Tools available in ~/go/bin/"
          echo "$HOME/go/bin" >> $GITHUB_PATH

      - name: Combine and filter results
        run: |
          mkdir -p combined-results
          export PATH="$HOME/go/bin:/usr/local/bin:$PATH"
          EXTS='(json|js|css|jpg|jpeg|png|svg|gif|exe|mp4|flv|pdf|doc|webm|wmv|webp|mov|mp3|avi|zip)($|\?)'
          echo "https://${{ inputs.domain }}/" > all-urls.tmp
          cat passive-wayback/waybackurls.txt >> all-urls.tmp || true
          cat passive-gau/gau.txt >> all-urls.tmp || true

          # Manual URLs (بدون heredoc)
          echo "https://${{ inputs.domain }}/search?q=test&category=all" >> all-urls.tmp
          echo "https://${{ inputs.domain }}/login?redirect=%2Fdashboard" >> all-urls.tmp
          echo "https://${{ inputs.domain }}/api/users?id=1&format=json" >> all-urls.tmp
          echo "https://${{ inputs.domain }}/product?id=123&color=red" >> all-urls.tmp
          echo "https://www.${{ inputs.domain }}/page?ref=home&utm_source=google" >> all-urls.tmp
          echo "https://${{ inputs.domain }}/contact?subject=hello&name=test" >> all-urls.tmp

          sort -u all-urls.tmp | grep -iEv "\.${EXTS}" | awk 'NF' > combined-results/all-urls.txt

          # Unique params
          if command -v unfurl >/dev/null 2>&1; then
            unfurl --unique keys < combined-results/all-urls.txt | sort -u > combined-results/unfurl-params.txt
          else
            grep '?' combined-results/all-urls.txt | while IFS= read -r url; do
              query="${url#*\?}"
              echo "$query" | sed 's/&/\n/g' | sed 's/=.*//' | grep -v '^$'
            done | sort -u > combined-results/unfurl-params.txt
          fi

          # If params less than 5, add defaults
          PARAM_FILE="combined-results/unfurl-params.txt"
          if [ $(wc -l < "$PARAM_FILE") -lt 5 ]; then
            for p in id q search query page limit offset sort filter category name email user redirect url callback ref source utm_source debug test; do
              echo "$p" >> "$PARAM_FILE"
            done
            sort -u "$PARAM_FILE" -o "$PARAM_FILE"
          fi

          grep -v '?' combined-results/all-urls.txt > combined-results/static-urls.txt || true
          grep '?' combined-results/all-urls.txt > combined-results/dynamic-urls.txt || true
          rm -f all-urls.tmp

      - name: Count URLs for matrix
        id: count
        run: |
          DYNAMIC=$(wc -l < combined-results/dynamic-urls.txt)
          TOTAL=$(wc -l < combined-results/all-urls.txt)
          echo "dynamic=$DYNAMIC" >> $GITHUB_OUTPUT
          echo "total=$TOTAL" >> $GITHUB_OUTPUT

      - name: Cache combined results
        uses: actions/cache@v3
        with:
          path: combined-results/
          key: combined-results-${{ inputs.run_id }}

      - name: Save domain input to cache
        run: |
          mkdir -p input-parameters
          echo "${{ inputs.domain }}" > input-parameters/domain.txt
          echo "${{ inputs.headers }}" > input-parameters/headers.txt

      - name: Cache input parameters
        uses: actions/cache@v3
        with:
          path: input-parameters/
          key: input-parameters-${{ inputs.run_id }}
