name: "X8 Debug Workflow"

on:
  workflow_dispatch:
    inputs:
      domain:
        description: 'Target domain (e.g., example.com)'
        required: true
        type: string
        default: 'https://bigdav.ir/test.php' # Default for easier testing
      parameter:
        description: 'Parameter to test (e.g., category)'
        required: true
        type: string
        default: 'category' # Default for easier testing
      headers:
        description: 'Custom headers (optional, e.g., "Cookie: session=abc123")'
        required: false
        type: string
        default: ''

jobs:
  debug-x8-single:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Install x8 (direct download)
        run: |
          echo "Installing x8..."
          wget https://github.com/Sh1Yo/x8/releases/latest/download/x8-linux-x86_64 -O x8
          chmod +x x8
          sudo mv x8 /usr/local/bin
          echo "x8 installed. Version:"
          x8 --version || true # Display version, continue on error

      - name: Debug Curl Raw Response
        run: |
          set -euxo pipefail
          echo "Debugging raw curl response for input domain: ${{ github.event.inputs.domain }}"
          echo "Testing with payload: TESTPAYLOAD"

          # Use a simple curl command for debugging purposes
          CURL_COMMAND="curl -k -s -X GET '${{ github.event.inputs.domain }}?${{ github.event.inputs.parameter }}=TESTPAYLOAD'"

          # Add headers if provided
          if [ -n "${{ github.event.inputs.headers }}" ]; then
            CURL_COMMAND="${CURL_COMMAND} -H \"${{ github.event.inputs.headers }}""
          fi

          echo "Executing curl command: $CURL_COMMAND"
          RAW_RESPONSE=$(eval "$CURL_COMMAND")
          echo "Raw Curl Response:"
          echo "$RAW_RESPONSE"

          if echo "$RAW_RESPONSE" | grep -q "TESTPAYLOAD"; then
            echo "SUCCESS: 'TESTPAYLOAD' found in raw response."
          else
            echo "WARNING: 'TESTPAYLOAD' NOT found in raw response. This might indicate no reflection."
          fi
          echo "----------------------------------------"

      - name: Run x8 with verbose output and stderr capture
        run: |
          # Enable strict error checking and print commands as they are executed
          set -euxo pipefail

          # Set locale environment variables to ensure consistent output
          export LANG=en_US.UTF-8
          export LC_ALL=en_US.UTF-8

          # Create input files for x8
          echo "${{ github.event.inputs.domain }}" > target_url.txt
          echo "${{ github.event.inputs.parameter }}" > param_wordlist.txt

          # Define a fixed output directory for this debug job
          DEBUG_OUTPUT_DIR="x8-debug-results"
          mkdir -p "$DEBUG_OUTPUT_DIR"

          echo "Running x8 with verbose output on ${{ github.event.inputs.domain }}..."
          echo "Parameter wordlist: ${{ github.event.inputs.parameter }}"

          # Check if input files exist and are not empty before running x8
          if [[ -s "target_url.txt" ]] && [[ -s "param_wordlist.txt" ]]; then
            # Execute x8, redirecting both stdout and stderr to tee and then to a log file.
            # '|| true' ensures the step doesn't fail immediately if x8 exits with a non-zero code.
            x8 -u "$(cat target_url.txt)" -w param_wordlist.txt -v 2>&1 | tee "${DEBUG_OUTPUT_DIR}/x8-verbose.log" || true

            # Capture and display x8's exit code
            X8_EXIT_CODE=$?
            echo "x8 exited with code: $X8_EXIT_CODE"

            echo "--- Raw x8 Scan Output (from log file): ---"
            cat "${DEBUG_OUTPUT_DIR}/x8-verbose.log" || echo "x8-verbose.log not found or empty."
            echo "--------------------------------------------"

            # Check for the reflection string in the x8 output log
            if grep -q "reflections: ${{ github.event.inputs.parameter }}" "${DEBUG_OUTPUT_DIR}/x8-verbose.log"; then
              echo "SUCCESS: 'reflections: ${{ github.event.inputs.parameter }}' found in x8 output."
            else
              echo "WARNING: 'reflections: ${{ github.event.inputs.parameter }}' NOT found in x8 output."
              echo "This indicates x8 is still not reporting the reflection in CI."
            fi
          else
            echo "ERROR: Input files target_url.txt or param_wordlist.txt are empty or not found."
            # Create an empty log file to avoid subsequent errors
            touch "${DEBUG_OUTPUT_DIR}/x8-verbose.log"
          fi

      # - name: Start tmate session for live debugging (Optional)
      #   # Uncomment this step if you want to connect via SSH to the runner for live debugging
      #   # You will see an SSH command in the logs if this step runs successfully
      #   uses: mxschmitt/action-tmate@v3
      #   with:
      #     ssh: true
